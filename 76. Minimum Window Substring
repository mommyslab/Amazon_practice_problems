class Solution {
public:
    
    bool isValid(string ss,unordered_map<char,int> t)
    {
        for(int i=0;i<ss.size();i++)
            t[ss[i]]-=1;
        for(unordered_map<char,int>::iterator f=t.begin();f!=t.end();++f)
            if(f->second>0)
            return false;
        return true; 
    }
    unordered_map<char,int> countCharsOfT(string t,unordered_map<char,int> & tChars)
    {
        //how many of whichs chars in second string
        for(int i=0;i<t.size();i++)//populate tChars
        {
            unordered_map<char,int>::iterator find=tChars.find(t[i]);
            if(find==tChars.end())
                tChars[t[i]]=1;
            else
                tChars[t[i]]+=1;
           // cout<<tChars[t[i]]<<endl;
        }
        return tChars;
     }
    string minWindow(string s, string t) {
        unordered_map<char,int> tChars;
        countCharsOfT(t,tChars);
        int left=0,right=0,min=s.size()+1;
        bool found=false;
        string ans="";
        string curmin="";
        while(right<s.size())
        {
            string sub=s.substr(left,right-left+1);
            bool isV=isValid(sub,tChars);
            //cout<<sub<<" "<<isV<<endl;
            if(isV==false)
            {
                right++;
                continue;
            }
            else
            {
                ans=sub;
                if(sub.size()==1)
                    {
                        curmin=sub;
                        right++;
                        break;
                    }
                bool isSmaller=false;
                while(!isSmaller)
                {
                    left++;
                    cout<<left<<" l"<<endl;
                    sub=s.substr(left,right-left+1);
                    isV=isValid(sub,tChars);
                    //cout<<sub<<" sub "<< isV<<" isV "<<endl;
                    if(isV==1)
                    {  
                        ans=sub;
                        continue;
                    }
                    else
                    {
                        if(ans.size()<min)
                            {
                                curmin=ans;
                                min=curmin.size();
                               // cout<<ans.size()<<" mn size "<<endl;
                                
                            }
                        isSmaller=true;
                    } 
                    //cout<<ans<<" ans "<<endl;
                }
            }
        }
        return curmin;
    }
};
