/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node * recurse( Node* root)
    {
        Node * res=new Node(root->val);
        res->next=root->next;
        res->random=root->random;
        if(root->next!=NULL)
            recurse(root->next);
        return res;
    }
   
    Node* copyRandomList(Node* head) {
        Node* traverse=head;
        vector<Node *> store;
        
        while(traverse->next!=NULL)
        {
            Node * res=new Node(traverse->val);
          res->random=traverse->random;
            store.push_back(res);
        }
        Node * res=store[0];
        for(int i=0;i<store.size()-1;i++)
        {
            store[i]->next=store[i+1];
        }
         return res;
    }
};
